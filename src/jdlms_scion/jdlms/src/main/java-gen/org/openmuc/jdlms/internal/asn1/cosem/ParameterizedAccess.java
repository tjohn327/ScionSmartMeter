/**
 * This class file was automatically generated by the AXDR compiler that is part of jDLMS (http://www.openmuc.org)
 */

package org.openmuc.jdlms.internal.asn1.cosem;

import java.io.IOException;
import java.io.InputStream;

import org.openmuc.jasn1.ber.ReverseByteArrayOutputStream;
import org.openmuc.jdlms.internal.asn1.axdr.AxdrType;

public class ParameterizedAccess implements AxdrType {

    public byte[] code = null;
    public Integer16 variableName = null;

    public Unsigned8 selector = null;

    public Data parameter = null;

    public ParameterizedAccess() {
    }

    public ParameterizedAccess(byte[] code) {
        this.code = code;
    }

    public ParameterizedAccess(Integer16 variableName, Unsigned8 selector, Data parameter) {
        this.variableName = variableName;
        this.selector = selector;
        this.parameter = parameter;
    }

    @Override
    public int encode(ReverseByteArrayOutputStream axdrOStream) throws IOException {

        int codeLength;

        if (code != null) {
            codeLength = code.length;
            for (int i = code.length - 1; i >= 0; i--) {
                axdrOStream.write(code[i]);
            }
        }
        else {
            codeLength = 0;
            codeLength += parameter.encode(axdrOStream);

            codeLength += selector.encode(axdrOStream);

            codeLength += variableName.encode(axdrOStream);

        }

        return codeLength;

    }

    @Override
    public int decode(InputStream iStream) throws IOException {
        int codeLength = 0;

        variableName = new Integer16();
        codeLength += variableName.decode(iStream);

        selector = new Unsigned8();
        codeLength += selector.decode(iStream);

        parameter = new Data();
        codeLength += parameter.decode(iStream);

        return codeLength;
    }

    public void encodeAndSave(int encodingSizeGuess) throws IOException {
        ReverseByteArrayOutputStream axdrOStream = new ReverseByteArrayOutputStream(encodingSizeGuess);
        encode(axdrOStream);
        code = axdrOStream.getArray();
    }

    @Override
    public String toString() {
        return "sequence: {" + "variableName: " + variableName + ", selector: " + selector + ", parameter: " + parameter
                + "}";
    }

}
